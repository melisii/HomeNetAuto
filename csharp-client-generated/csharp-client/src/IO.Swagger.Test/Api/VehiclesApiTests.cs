/* 
 * DealersAndVehicles
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using NUnit.Framework;
using System.Threading.Tasks;
using thread = System.Threading.Tasks;
using System.Collections.Concurrent;

using IO.Swagger.Client;
using IO.Swagger.Api;
using IO.Swagger.Model;

namespace IO.Swagger.Test
{
    /// <summary>
    ///  Class for testing VehiclesApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    [TestFixture]
    public class VehiclesApiTests
    {
        private DataSetApi dsInstance;
        private VehiclesApi vehicleInstance;
        private DealersApi dealerInstance;

        List<VehicleResponse> vehicleList = new List<VehicleResponse>();
        List<DealersResponse> dealerList = new List<DealersResponse>();

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [SetUp]
        public void Init()
        {
            vehicleInstance = new VehiclesApi();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an vehicleInstance of VehiclesApi
        /// </summary>
        [Test]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOfType' VehiclesApi
            //Assert.IsInstanceOfType(typeof(VehiclesApi), instance, "instance is a VehiclesApi");
        }

        
        /// <summary>
        /// Test VehiclesGetIds
        /// </summary>
        [Test]
        public void VehiclesGetIdsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string datasetId = null;
            //var response = vehicleInstance.VehiclesGetIds(datasetId);
            //Assert.IsInstanceOf<VehicleIdsResponse> (response, "response is VehicleIdsResponse");
        }
        
        /// <summary>
        /// Test VehiclesGetVehicle
        /// </summary>
        [Test]
        public void VehiclesGetVehicleTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string datasetId = null;
            //int? vehicleid = null;
            //var response = vehicleInstance.VehiclesGetVehicle(datasetId, vehicleid);
            //Assert.IsInstanceOf<VehicleResponse> (response, "response is VehicleResponse");
        }


        [Test]
        public AnswerResponse VehiclePostAnswerTest()
        {           
            dsInstance = new DataSetApi();
            vehicleInstance = new VehiclesApi();
            dealerInstance = new DealersApi();

            Answer answer = new Answer();

            // Get DataSet ID
            string datasetId = "";
            DatasetIdResponse responseDataSetId = dsInstance.DataSetGetDataSetId();            
            datasetId = responseDataSetId.DatasetId;

            // Get the Dealers and Vehicles for the given DataSetID

            // Get VehicleIds
            VehicleIdsResponse responseVehicleIds = new VehicleIdsResponse();
            responseVehicleIds = vehicleInstance.VehiclesGetIds(datasetId);
 

         


            /////////////////////////  CHEAT /////////////////////////////////////////////////
            answer = dsInstance.DataSetGetCheat(datasetId);   //// CHEAT answer
            /////////////////////////////////////////////////////////////////////////////////


            // Post the response answer
            //var response = dsInstance.DataSetPostAnswer(datasetId, answer);
            AnswerResponse ansResponse = dsInstance.DataSetPostAnswer(datasetId, answer);
            Assert.IsInstanceOf<AnswerResponse>(ansResponse, "response is AnswerResponse");

            return ansResponse;
        }




    }
}
